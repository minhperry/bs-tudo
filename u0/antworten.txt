Phan Tuan Minh (MNr. 235483)											
BS SoSe 22

Aufgabe 0
Theoriefragen
(Alle Befehle werden auf WSL Ubuntu 20.04 mit gcc (für man 3 printf) installiert ausgeführt)
1.	Mit dem Parameter -l (ls -l) wird der gesamte Inhalt eines Verzeichnisses im (langen) Listenformat angezeigt.
2.	man steht für Manual (Anleitung). man erklärt, wie man ein UNIX-Kommando nutzt, wie z.B. welche Argumente man nutzen kann oder was das Syntax für ein Kommando ist.
man 1 printf zeige die Anleitung für printf in der Section 1 (ausführbare Kommandos oder Shell-Kommandos)
→ man 1 printf ist für die Nutzung von printf in dem Shell
man 3 printf zeige die Anleitung für printf in der Section 3 (Aufrufe aus Programmbibliotheken)
→ man 3 printf ist für die Nutzung von printf in einem C-Programm.
3.	Mit mv kann man Dateien und Ordner umbenennen. Außerdem kann man auch Dateien und Ordner verschieben.
z.B.	mv eins zwei 	→ Ordner eins wird im zwei umbenannt.
	mv eins ./zwei 	→ Ordner eins wird in zwei verschoben und ist deshalb Unterordner von zwei.

Programmierung in C
(Das Programm wird mit gcc -Wall -Wpedantic -o fib fib.c && ./fib kompiliert und ausgeführt)
1.	
a) 	Bei n = 45 ist die 45. Fibo-Zahl etwa 1.1 × 10^9
	Bei n = 46 ist die 46. Fibo-Zahl etwa 1.8 × 10^9. 
	Bei n = 47 ist die 47. Fibo-Zahl etwa -1.3 × 10^9
Die 47. Fibo-Zahl soll etwa 2.9 × 10^9 sein, aber der maximaler Betrag von int-Datentyp ist nur etwa 2.1 × 10^9	. Dadurch ist die Zahl übergelaufen und auf die negative Seite zurückgegangen.

b) Mithilfe von <time.h>-Bibliothek und time() dauert mit n = 50 schon etwa 114 Sekunden (~2 Minuten) und n = 51 177 Sekunden (~3 Minuten). Da die Funktion rekursiv ist und die Haltebedingungen nur n = 1 oder n = 2 sind, muss die Funktion bei jedem Schritt sich mehrmals rufen. Bei einem ausreichend großen n wird die Funktion so oft aufgerufen, dass kein Speicherplatz mehr vorhanden ist und es halt einfach da.
2.	Bei n = 4 wird n = 2 und n = 3 gerufen, und bei n = 3 wird n = 1 und n = 2 gerufen.
In C werde die Variablen zuerst auf den höhere Adressen des Stack gelegt und die Adresse steigt dann ab. In jeder rekursiver Aufrufe sind die neuen (lokalen) Variablen neu für dem Stack und folgen deshalb solche Regel.
 
3.	Globale Variable wird im Datasegment gespeichert, während lokale Variable im Stack sind.
